@model OrderSearchModel

@inject IStoreService storeService
@using Nop.Services.Stores
@using Nop.Web.Models.Order

@{
    // ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ for order/list　↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    var kendoVersion = "2020.1.406";

    Html.AppendCssFileParts("~/css/admin/styles.css");
    Html.AppendCssFileParts("~/lib_npm/admin-lte/css/adminlte.min.css");
    Html.AppendCssFileParts("~/lib_npm/bootstrap/css/bootstrap.min.css");

    Html.AppendCssFileParts(ResourceLocation.Footer, $"~/lib_npm/overlayscrollbars/css/OverlayScrollbars.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, $"~/lib_npm/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, $"~/lib_npm/datatables.net-bs4/css/dataTables.bootstrap4.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/styles/web/kendo.rtl.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/styles/web/kendo.default.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, $"~/lib/kendo/{kendoVersion}/styles/web/kendo.common.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, "~/lib_npm/@fortawesome/fontawesome-free/css/all.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, "~/lib_npm/bootstrap-touchspin/jquery.bootstrap-touchspin.min.css");
    Html.AppendCssFileParts(ResourceLocation.Footer, "~/lib_npm/jquery-ui-dist/jquery-ui.min.css");

    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/datatables.net-buttons/js/dataTables.buttons.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/moment/min/moment-with-locales.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/datatables.net-bs4/js/dataTables.bootstrap4.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/datatables.net/js/jquery.dataTables.min.js");

    // ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑

    //page title
    ViewBag.PageTitle = T("Admin.Orders").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Orders");
}

@{
    const string hideSearchBlockAttributeName = "OrdersPage.HideSearchBlock";
    var hideSearchBlock = true;
}

<form asp-controller="Order" asp-action="List" method="post">

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">

                    <div class="card card-default card-search">
                        <div class="card-body">

                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            </div>


                            <div class="form-group row" @(Model.IsLoggedInAsVendor ? Html.Raw("style='display: none;'") : null)>
                                <div class="col-md-4">
                                    <nop-label asp-for="OrderStatusIds" />
                                </div>
                                <div class="col-md-8">
                                    <nop-select asp-for="OrderStatusIds" asp-items="Model.AvailableOrderStatuses" />
                                </div>
                            </div>


                            <div class="row">
                                <div class="text-center col-12">
                                    <button type="button" id="search-orders" class="btn btn-primary btn-search">
                                        <i class="fas fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">
                            @{
                                var gridModel = new DataTablesModel
                                {
                                    Name = "orders-grid",
                                    UrlRead = new DataUrl("OrderList", "Order", null),
                                    SearchButtonId = "search-orders",
                                    Length = Model.PageSize,
                                    LengthMenu = Model.AvailablePageSizes,
                                    // enable to sort
                                    Ordering = true,
                                    ServerSide = false,
                                    RefreshButton = false,
                                    //FooterCallback = !Model.IsLoggedInAsVendor ? "ordersfootercallback" : null,
                                    //FooterColumns = !Model.IsLoggedInAsVendor ? 10 : 0,
                                    Filters = new List<FilterParameter>
                                                                                                                                            {
                                    new FilterParameter(nameof(Model.OrderStatusIds)),
                                }
                                };

                                gridModel.ColumnCollection.Add(new ColumnProperty("CustomOrderNumber")
                                {
                                    Title = T("Admin.Orders.Fields.CustomOrderNumber").Text,
                                    Width = "20"
                                });

                                gridModel.ColumnCollection.Add(new ColumnProperty("OrderStatus")
                                {
                                    Title = T("Admin.Orders.Fields.OrderStatus").Text,
                                    Width = "50",
                                    Render = new RenderCustom("renderColumnOrderStatus")
                                });

                                gridModel.ColumnCollection.Add(new ColumnProperty("CreatedOn")
                                {
                                    Title = T("Admin.Orders.Fields.CreatedOn").Text,
                                    Width = "120",
                                    Render = new RenderDate()
                                });

                                gridModel.ColumnCollection.Add(new ColumnProperty("OrderTotal")
                                {
                                    Title = T("Admin.Orders.Fields.OrderTotal").Text,
                                    Width = "100",
                                });
                                gridModel.ColumnCollection.Add(new ColumnProperty("Id")
                                {
                                    Title = T("Admin.Common.View").Text,
                                    Width = "50",
                                    ClassName = NopColumnClassDefaults.Button,
                                    Render = new RenderButtonDetail(new DataUrl("~/OrderDetails"))
                                });
                            }

                            @await Html.PartialAsync("Table", gridModel)

                            <script>
                                function renderColumnOrderStatus(data, type, row, meta) {
                                    var color;
                                    switch (row.OrderStatusId) {
                                        case 10:
                                            color = 'yellow';
                                            break;
                                        case 20:
                                            color = 'blue';
                                            break;
                                        case 30:
                                            color = 'green';
                                            break;
                                        case 40:
                                            color = 'red';
                                            break;
                                    }
                                    return '<span class="grid-report-item ' + color + '">' + data + '</span >';
                                }

                            </script>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </section>
</form>

